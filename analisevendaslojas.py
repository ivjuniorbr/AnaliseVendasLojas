# -*- coding: utf-8 -*-
"""AnaliseVendasLojas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hwmzrN-FAsY8jITQF3sb_EAHno_bnzja
"""

# Importando as bibliotecas
import pandas as pd
import matplotlib.pyplot as plt
plt.style.use("seaborn")

# Upload do arquivo
from google.colab import files
arq = files.upload()

# Criação do DataFrame
df = pd.read_excel("AdventureWorks.xlsx")

# Visualizando as 5 primeiras linhas
df.head()

# Exclusão de colunas
df.drop('ID Loja', axis=1, inplace=True)
df.drop('ID Produto', axis=1, inplace=True)
df.drop('ID Cliente', axis=1, inplace=True)
df.head()

# Identificando a quantidade de linhas e colunas
df.shape

# Verificando os tipos de dados
df.dtypes

# Verificando a Receita total?
df["Valor Venda"].sum()

# Verificando o custo Total?
df["custo"] = df["Custo Unitário"].mul(df["Quantidade"]) #Criando a coluna de custo
df.head(1)

# Custo Total?
round(df["custo"].sum(), 2)

# Encontrando o Lucro total
# Criando coluna de Lucro que será Receita - Custo
df["lucro"]  = df["Valor Venda"] - df["custo"] 
df.head(1)

# Total Lucro
round(df["lucro"].sum(),2)

# Criando uma coluna com total de dias para enviar o produto
df["Tempo_envio"] = df["Data Envio"] - df["Data Venda"]
df.head(1)

"""** Calculando a média do tempo de envio de cada Marca e para isso precisamos transformar a coluna Tempo_envio em númerica **"""

# Extraindo apenas os dias
df["Tempo_envio"] = (df["Data Envio"] - df["Data Venda"]).dt.days
df.head(1)

# Verificando o tipo da coluna Tempo_envio
df["Tempo_envio"].dtype

# Média do tempo de envio por Marca
df.groupby("Marca")["Tempo_envio"].mean()

# Verificando os dados faltantes
df.isnull().sum()

# Agrupando por ano e marca
df.groupby([df["Data Venda"].dt.year, "Marca"])["lucro"].sum()

pd.options.display.float_format = '{:20,.2f}'.format

# Resetando o index e organizando em tabela
lucro_ano = df.groupby([df["Data Venda"].dt.year, "Marca"])["lucro"].sum().reset_index()
lucro_ano

# Qual o total de produtos vendidos?
df.groupby("Produto")["Quantidade"].sum().sort_values(ascending=False)

# Gerando o gráfico Total de produtos vendidos
df.groupby("Produto")["Quantidade"].sum().sort_values(ascending=True).plot.barh(title="Total Produtos Vendidos")
plt.xlabel("Total")
plt.ylabel("Produto");

# Gerando gráfico Lucro x Ano
df.groupby(df["Data Venda"].dt.year)["lucro"].sum().plot.bar(title="Lucro x Ano")
plt.xlabel("Ano")
plt.ylabel("Receita");

df.groupby(df["Data Venda"].dt.year)["lucro"].sum()

# Selecionando as vendas por ano
df_2009 = df[df["Data Venda"].dt.year == 2009]
df_2009.head()

# Gerando gráfico Lucro x Mês
df_2009.groupby(df_2009["Data Venda"].dt.month)["lucro"].sum().plot(title="Lucro x Mês")
plt.xlabel("Mês")
plt.ylabel("Lucro");

# Gerando o gráfico de Lucro x Marca
df_2009.groupby("Marca")["lucro"].sum().plot.bar(title="Lucro x Marca")
plt.xlabel("Marca")
plt.ylabel("Lucro")
plt.xticks(rotation='horizontal');

# Gerando o gráfico de Lucro x Classe
df_2009.groupby("Classe")["lucro"].sum().plot.bar(title="Lucro x Classe")
plt.xlabel("Classe")
plt.ylabel("Lucro")
plt.xticks(rotation='horizontal');

df["Tempo_envio"].describe()

# Gerando o gráfico de Boxplot
plt.boxplot(df["Tempo_envio"]);

# Histograma
plt.hist(df["Tempo_envio"]);

# Tempo mínimo de envio
df["Tempo_envio"].min()

# Tempo máximo de envio
df['Tempo_envio'].max()

# Identificando o Outlier
df[df["Tempo_envio"] == 20]

df.to_csv("df_vendas_novo.csv", index=False)

